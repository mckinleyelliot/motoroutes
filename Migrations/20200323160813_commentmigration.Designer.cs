// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using motoroutes.Models;

namespace motoroutes.Migrations
{
    [DbContext(typeof(HomeContext))]
    [Migration("20200323160813_commentmigration")]
    partial class commentmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("motoroutes.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("motoroutes.Models.comment", b =>
                {
                    b.Property<int>("commentId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.Property<string>("commentcontent")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("rideId");

                    b.HasKey("commentId");

                    b.HasIndex("UserId");

                    b.HasIndex("rideId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("motoroutes.Models.ride", b =>
                {
                    b.Property<int>("rideId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.Property<string>("kml_url")
                        .IsRequired();

                    b.Property<string>("ridecity")
                        .IsRequired();

                    b.Property<string>("ridedesc");

                    b.Property<string>("ridename")
                        .IsRequired();

                    b.Property<string>("ridestate")
                        .IsRequired();

                    b.HasKey("rideId");

                    b.HasIndex("UserId");

                    b.ToTable("rides");
                });

            modelBuilder.Entity("motoroutes.Models.comment", b =>
                {
                    b.HasOne("motoroutes.Models.User")
                        .WithMany("madecomment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("motoroutes.Models.ride")
                        .WithMany("madecomments")
                        .HasForeignKey("rideId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("motoroutes.Models.ride", b =>
                {
                    b.HasOne("motoroutes.Models.User")
                        .WithMany("createdrides")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
